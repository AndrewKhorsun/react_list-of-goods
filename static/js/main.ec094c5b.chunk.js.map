{"version":3,"sources":["component/goodList.tsx","App.tsx","index.tsx"],"names":["GoodList","goods","className","length","map","good","goodsFromServer","App","state","hasButton","isReversed","sortBy","lengthLimit","start","setState","reverse","sortByAlphabetically","sortByLength","reset","viewLength","value","this","visibleGoods","filter","sort","g1","g2","localeCompare","undefined","type","onClick","onChange","element","target","Component","ReactDOM","render","document","getElementById"],"mappings":"0OAMaA,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,qCACE,oBAAIC,UAAU,QAAd,wBACA,qBAAKA,UAAU,WAAf,SAEoB,IAAjBD,EAAME,OACF,oDACAF,EAAMG,KAAI,SAAAC,GAAI,OACf,oBAAIH,UAAU,iBAAd,SACE,6BAAKG,KAD6BA,YCVxCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAWWC,EAAb,4MACEC,MAAyB,CACvBC,WAAW,EACXC,YAAY,EACZC,OAAQ,GACRV,MAAOK,EACPM,YAAa,GANjB,EASEC,MAAQ,WACN,EAAKC,SAAS,CACZL,WAAW,KAXjB,EAeEM,QAAU,WACR,EAAKD,UAAS,SAAAN,GAAK,MAAK,CACtBE,YAAaF,EAAME,gBAjBzB,EAqBEM,qBAAuB,WACrB,EAAKF,SAAS,CACZH,OAAQ,SAvBd,EA2BEM,aAAe,WACb,EAAKH,SAAS,CACZH,OAAQ,YA7Bd,EAiCEO,MAAQ,WACN,EAAKJ,SAAS,CACZH,OAAQ,GAAID,YAAY,EAAOE,YAAa,KAnClD,EAuCEO,WAAa,SAACC,GACZ,EAAKN,UAAS,iBAAO,CAAEF,aAAcQ,OAxCzC,4CA2CE,WAAU,IAAD,OACP,EAMIC,KAAKb,MALPC,EADF,EACEA,UACAC,EAFF,EAEEA,WACAT,EAHF,EAGEA,MACAU,EAJF,EAIEA,OACAC,EALF,EAKEA,YAGIU,EAAe,YAAIrB,GACtBsB,QAAO,SAAAlB,GAAI,OAAIA,EAAKF,QAAUS,KAkBjC,OAhBAU,EAAaE,MAAK,SAACC,EAAIC,GACrB,OAAQf,GACN,IAAK,MACH,OAAOc,EAAGE,cAAcD,GAC1B,IAAK,SACH,OAAOD,EAAGtB,OAASuB,EAAGvB,OAExB,QACE,OAAO,MAITO,GACFY,EAAaP,UAIb,sBAAKb,UAAU,MAAf,UACIO,OAUEmB,EARA,wBACEC,KAAK,SACL3B,UAAU,iCACV4B,QAAST,KAAKR,MAHhB,mBASHJ,GAAa,cAAC,EAAD,CAAUR,MAAOqB,IAC/B,sBAAKpB,UAAU,eAAf,UACGO,GACC,wBACEP,UAAU,oBACV2B,KAAK,SACLC,QAAST,KAAKN,QAHhB,qBAQDN,GACC,wBACEP,UAAU,oBACV2B,KAAK,SACLC,QAAST,KAAKL,qBAHhB,iCAQDP,GACC,wBACEP,UAAU,oBACV2B,KAAK,SACLC,QAAST,KAAKJ,aAHhB,4BAQDR,GACC,wBACEP,UAAU,oBACV2B,KAAK,SACLC,QAAST,KAAKH,MAHhB,mBAQDT,GACC,qBAAKP,UAAU,oBAAf,SACE,yBACEkB,MAAOR,EACPmB,SAAU,SAACC,GAAD,OAAa,EAAKb,WAAWa,EAAQC,OAAOb,QAFxD,UAIE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,+BAzIhB,GAAyBc,aCtBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ec094c5b.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const GoodList: React.FC<Props> = ({ goods }) => (\n  <>\n    <h1 className=\"title\">Goods list</h1>\n    <div className=\"goodList\">\n\n      {goods.length === 0\n        ? ('Oops...It seems there are no products in the list')\n        : (goods.map(good => (\n          <ul className=\"goodList__good\" key={good}>\n            <li>{good}</li>\n          </ul>\n        )))}\n    </div>\n  </>\n\n);\n","import { Component } from 'react';\nimport './App.scss';\nimport { GoodList } from './component/goodList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  hasButton: boolean,\n  isReversed: boolean,\n  sortBy: string,\n  goods: string[]\n  lengthLimit: number,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasButton: false,\n    isReversed: false,\n    sortBy: '',\n    goods: goodsFromServer,\n    lengthLimit: 0,\n  };\n\n  start = () => {\n    this.setState({\n      hasButton: true,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByAlphabetically = () => {\n    this.setState({\n      sortBy: 'Alf',\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortBy: 'length',\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      sortBy: '', isReversed: false, lengthLimit: 0,\n    });\n  };\n\n  viewLength = (value: string) => {\n    this.setState(() => ({ lengthLimit: +value }));\n  };\n\n  render() {\n    const {\n      hasButton,\n      isReversed,\n      goods,\n      sortBy,\n      lengthLimit,\n    } = this.state;\n\n    const visibleGoods = [...goods]\n      .filter(good => good.length >= lengthLimit);\n\n    visibleGoods.sort((g1, g2) => {\n      switch (sortBy) {\n        case 'Alf':\n          return g1.localeCompare(g2);\n        case 'length':\n          return g1.length - g2.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        {!hasButton\n          ? (\n            <button\n              type=\"button\"\n              className=\"button is-warning button--size\"\n              onClick={this.start}\n            >\n              START\n            </button>\n          )\n          : undefined}\n        {hasButton && <GoodList goods={visibleGoods} />}\n        <div className=\"button__flex\">\n          {hasButton && (\n            <button\n              className=\"button is-success\"\n              type=\"button\"\n              onClick={this.reverse}\n            >\n              REVERSE\n            </button>\n          )}\n          {hasButton && (\n            <button\n              className=\"button is-success\"\n              type=\"button\"\n              onClick={this.sortByAlphabetically}\n            >\n              Sort alphabetically\n            </button>\n          )}\n          {hasButton && (\n            <button\n              className=\"button is-success\"\n              type=\"button\"\n              onClick={this.sortByLength}\n            >\n              Sort by length\n            </button>\n          )}\n          {hasButton && (\n            <button\n              className=\"button is-success\"\n              type=\"button\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n          {hasButton && (\n            <div className=\"select is-success\">\n              <select\n                value={lengthLimit}\n                onChange={(element) => this.viewLength(element.target.value)}\n              >\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">7</option>\n                <option value=\"6\">6</option>\n                <option value=\"7\">7</option>\n                <option value=\"8\">8</option>\n                <option value=\"9\">9</option>\n                <option value=\"10\">10</option>\n              </select>\n            </div>\n\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}